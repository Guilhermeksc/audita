x-airflow-common: &airflow-common
  image: apache/airflow:2.10.5-python3.12
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres:5432/audita_db
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
    AIRFLOW__WEBSERVER__AUTHENTICATE: "true"
    AIRFLOW__WEBSERVER__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"
    AIRFLOW__WEBSERVER__SECRET_KEY: "${DJANGO_SECRET_KEY}"
    AIRFLOW__WEBSERVER__REMOTE_USER_ENABLED: "true"
    AIRFLOW__WEBSERVER__REMOTE_USER_HEADER: "X-Remote-User"
    AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_NAME: "X-Remote-User"
    AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_EMAIL: "X-Remote-User-Email"
    AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_FIRSTNAME: "X-Remote-User-Firstname"
    AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_LASTNAME: "X-Remote-User-Lastname"
    AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_ROLES: "X-Remote-User-Roles"
  volumes:
    - ./backend/airflow/dags:/opt/airflow/dags
    - ./backend/airflow/logs:/opt/airflow/logs
    - ./backend/airflow/plugins:/opt/airflow/plugins
  depends_on:
    - postgres
  networks:
    - audita-net
  user: "50000:0"  # Usar o UID do usu√°rio airflow

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - audita-net

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    command: >
      bash -c "airflow db upgrade &&
               airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin"
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    environment:
      AIRFLOW__WEBSERVER__WEB_SERVER_URL_PREFIX: /airflow
      AIRFLOW__WEBSERVER__BASE_URL: https://auditapro.com.br/airflow
      AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: "True"
      AIRFLOW__WEBSERVER__REMOTE_USER_ENABLED: "true"
      AIRFLOW__WEBSERVER__REMOTE_USER_HEADER: "X-Remote-User"
      AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_NAME: "X-Remote-User"
      AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_EMAIL: "X-Remote-User-Email"
      AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_FIRSTNAME: "X-Remote-User-Firstname"
      AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_LASTNAME: "X-Remote-User-Lastname"
      AIRFLOW__WEBSERVER__REMOTE_USER_HEADER_ROLES: "X-Remote-User-Roles"
    command: >
      bash -c "mkdir -p /opt/airflow/logs/scheduler &&
               chown -R airflow:root /opt/airflow/logs &&
               airflow webserver --access-logfile - --error-logfile - --host 0.0.0.0 --port 8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s
    networks:
      - audita-net

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: >
      bash -c "mkdir -p /opt/airflow/logs/scheduler &&
               chown -R airflow:root /opt/airflow/logs &&
               airflow scheduler"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      - audita-net

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: django
    env_file:
      - .env
    volumes:
      - ./backend/django:/opt/django
      - static_volume:/opt/django/staticfiles
    ports:
      - "${DJANGO_PORT}:8000"
    networks:
      - audita-net

  nginx:
    image: nginx:latest
    container_name: nginx
    env_file:
      - .env
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist/browser:/usr/share/nginx/html
      - static_volume:/opt/django/staticfiles
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
      - airflow-webserver
    networks:
      - audita-net

volumes:
  postgres-db-volume:
  static_volume:

networks:
  audita-net:

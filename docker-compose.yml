services:
  airflow-db:
    image: postgres:16
    container_name: airflow-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - audita-net

  airflow-init:
    image: apache/airflow:2.10.4
    container_name: airflow-init
    depends_on:
      - airflow-db
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    entrypoint: >
      bash -c "airflow db init &&
               airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin"
    networks:
      - audita-net

  airflow-webserver:
    image: apache/airflow:2.10.4
    container_name: airflow-webserver
    restart: unless-stopped
    depends_on:
      - airflow-db
    env_file:
      - .env
    volumes:
      - ./backend/airflow/dags:/opt/airflow/dags
      - ./backend/airflow/logs:/opt/airflow/logs
      - ./backend/airflow/plugins:/opt/airflow/plugins
    # ports:
    #   - "8080:8080"
    networks:
      - audita-net
    command: airflow webserver

  airflow-scheduler:
    image: apache/airflow:2.10.4
    container_name: airflow-scheduler
    restart: unless-stopped
    depends_on:
      - airflow-db
    env_file:
      - .env
    volumes:
      - ./backend/airflow/dags:/opt/airflow/dags
      - ./backend/airflow/logs:/opt/airflow/logs
      - ./backend/airflow/plugins:/opt/airflow/plugins
    networks:
      - audita-net
    command: airflow scheduler


  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - audita-net

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: django
    env_file:
      - .env
    volumes:
      - ./backend/django:/opt/django
      - static_volume:/opt/django/staticfiles
    ports:
      - "${DJANGO_PORT}:8000"
    networks:
      - audita-net

  nginx:
    image: nginx:latest
    container_name: nginx
    env_file:
      - .env
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist/browser:/usr/share/nginx/html
      - static_volume:/opt/django/staticfiles
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
      - airflow-webserver
    networks:
      - audita-net

volumes:
  postgres-db-volume:
  airflow_pgdata:
  static_volume:

networks:
  audita-net:

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.9.0-python3.12
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres:5432/audita_db
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"

  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully    
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully    

  airflow-init:
    <<: *airflow-common
    command: bash -c "airflow db migrate && airflow users create --username admin --firstname Admin --lastname User --role Admin --password admin --email admin@example.com"
    restart: on-failure
    depends_on:
      - postgres

        
  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    env_file:
      - .env
    volumes:
      - ./backend/django:/opt/django
      - static_volume:/opt/django/staticfiles
    ports:
      - "${DJANGO_PORT}:8000"

  nginx:
    image: nginx:latest
    env_file:
      - .env
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist/browser:/usr/share/nginx/html
      - static_volume:/opt/django/staticfiles      
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - django

volumes:
  postgres-db-volume:
  static_volume:
